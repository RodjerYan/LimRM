import { AggregatedDataRow } from "../types";
import { formatLargeNumber } from "../utils/dataUtils";

// This service is now refactored to use the Google Gemini API via a proxy.
export async function* generateAiSummaryStream(data: AggregatedDataRow): AsyncGenerator<string> {
    // FIX: Use correctly typed `import.meta.env` now that the global types are fixed.
    const proxyUrl = import.meta.env.VITE_GEMINI_PROXY_URL;

    if (!proxyUrl) {
        yield "### –û—à–∏–±–∫–∞ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏\n\n–ü—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è `VITE_GEMINI_PROXY_URL` –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Vercel –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ `/api/gemini-proxy` –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ.";
        return;
    }
    
    const fullUrl = `${proxyUrl}`;

    const prompt = `
    –¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ Limkorm, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–µ–π—Å—è –Ω–∞ –∫–æ—Ä–º–∞—Ö –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö.
    –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∫—Ä–∞—Ç–∫—É—é, –Ω–æ —ë–º–∫—É—é –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫—É—é —Å–ø—Ä–∞–≤–∫—É –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (${data.rm}) –ø–æ –≥–æ—Ä–æ–¥—É ${data.city} –∏ –±—Ä–µ–Ω–¥—É ${data.brand}.
    –°–ø—Ä–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ markdown, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∞, –ø–æ–∑–∏—Ç–∏–≤–Ω–∞ –∏ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∞.

    –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
    - –ì–æ—Ä–æ–¥: ${data.city}
    - –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä (–†–ú): ${data.rm}
    - –ë—Ä–µ–Ω–¥: ${data.brand}
    - –¢–µ–∫—É—â–∏–µ –ø—Ä–æ–¥–∞–∂–∏ (–§–∞–∫—Ç): ${formatLargeNumber(data.fact)} –∫–≥/–µ–¥.
    - –ü—Ä–æ–≥–Ω–æ–∑–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä—ã–Ω–∫–∞: ${formatLargeNumber(data.potential)} –∫–≥/–µ–¥.
    - –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞: ${formatLargeNumber(data.growthPotential)} –∫–≥/–µ–¥. (${data.growthRate.toFixed(1)}%)
    - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫ (–∑–æ–æ–º–∞–≥–∞–∑–∏–Ω—ã, –≤–µ—Ç–∫–ª–∏–Ω–∏–∫–∏ –∏ —Ç.–¥.) –≤ –≥–æ—Ä–æ–¥–µ: ${data.potentialTTs} —à—Ç.
    - –ü—Ä–∏–º–µ—Ä—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤: ${data.potentialClients.slice(0, 3).map(c => c.name).join(', ')}.

    –¢–≤–æ—è –∑–∞–¥–∞—á–∞:
    1.  **–ó–∞–≥–æ–ª–æ–≤–æ–∫**: –°–æ–∑–¥–∞–π —á–µ—Ç–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä, "–ê–Ω–∞–ª–∏–∑ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞: –≥. ${data.city} / ${data.brand}".
    2.  **–ö–ª—é—á–µ–≤—ã–µ –≤—ã–≤–æ–¥—ã (Executive Summary)**: –ù–∞–ø–∏—à–∏ 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å –≥–ª–∞–≤–Ω–æ–π –º—ã—Å–ª—å—é. –ü–æ–¥—á–µ—Ä–∫–Ω–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞.
    3.  **–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã**: –û—Ç–º–µ—Ç—å —Ç–µ–∫—É—â–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è (–æ–±—ä–µ–º –ø—Ä–æ–¥–∞–∂).
    4.  **–ó–æ–Ω—ã —Ä–æ—Å—Ç–∞**: –£–∫–∞–∂–∏ –Ω–∞ —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Ñ–∞–∫—Ç–æ–º –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –¢–¢ –∫–∞–∫ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.
    5.  **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏**: –î–∞–π 1-2 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ, –¥–µ–π—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, "–°—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ä–∞–±–æ—Ç–µ —Å –Ω–æ–≤—ã–º–∏ –≤–µ—Ç–∫–ª–∏–Ω–∏–∫–∞–º–∏" –∏–ª–∏ "–ü—Ä–æ–≤–µ—Å—Ç–∏ –∞—É–¥–∏—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç–∏ –±—Ä–µ–Ω–¥–∞ –≤ –∫–ª—é—á–µ–≤—ã—Ö –∑–æ–æ–º–∞–≥–∞–∑–∏–Ω–∞—Ö".
    6.  **–ó–∞–∫–ª—é—á–µ–Ω–∏–µ**: –ó–∞–∫–æ–Ω—á–∏ –Ω–∞ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–π –∏ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–µ–π –Ω–æ—Ç–µ.

    –°—Ç–∏–ª—å: –¥–µ–ª–æ–≤–æ–π, –Ω–æ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π. –ò—Å–ø–æ–ª—å–∑—É–π **–∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç** –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–æ–≤ –∏ —Å–ø–∏—Å–∫–∏ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –¥–ª–∏–Ω–Ω—ã—Ö –∞–±–∑–∞—Ü–µ–≤. –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
    `;

    const requestBody = {
        contents: prompt,
        stream: true
    };

    try {
        const response = await fetch(fullUrl, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(requestBody),
        });
        
        if (!response.ok) {
            const errorText = await response.text();
            let detailedError = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.";
            let isApiKeyError = false;

            try {
                const errorJson = JSON.parse(errorText);
                const errorMessage = errorJson.error || '';
                detailedError = errorJson.details || errorMessage || errorText;
                if (typeof errorMessage === 'string' && errorMessage.includes('API key is not configured')) {
                    isApiKeyError = true;
                }
            } catch (e) {
                detailedError = errorText;
            }

            if (isApiKeyError) {
                yield `### üö® **–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –û—à–∏–±–∫–∞ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –°–µ—Ä–≤–µ—Ä–∞**\n\n` +
                      `**–ü—Ä–æ–±–ª–µ–º–∞:** –ö–ª—é—á API –¥–ª—è Google Gemini **–Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ**.\n\n` +
                      `–≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –∏–º–µ–Ω–µ–º \`API_KEY\` –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤ –≤–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ –Ω–∞ Vercel.\n\n` +
                      `--- \n` +
                      `#### üîç **–í–∞–∂–Ω–æ–µ –∑–∞–º–µ—á–∞–Ω–∏–µ (—á–∞—Å—Ç–∞—è –æ—à–∏–±–∫–∞):** \n` +
                      `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —Å–æ–∑–¥–∞–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –∏–º–µ–Ω–µ–º —Ä–æ–≤–Ω–æ **\`API_KEY\`**, –∞ –Ω–µ \`VITE_GEMINI_API_KEY\`. \n\n`+
                      `*   \`VITE_GEMINI_API_KEY\` ‚Äî —ç—Ç–æ **–∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è** –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è. –û–Ω–∞ –Ω—É–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å. \n` +
                      `*   \`API_KEY\` ‚Äî —ç—Ç–æ **—Å–µ—Ä–≤–µ—Ä–Ω–∞—è** –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è. –ò–º–µ–Ω–Ω–æ –æ–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∞–º –∫–ª—é—á –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ AI. **–ò–º–µ–Ω–Ω–æ –µ—ë —Å–µ–π—á–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç.**\n\n` +
                      `--- \n` +
                      `**–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:**\n` +
                      `1.  –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ **Vercel**.\n` +
                      `2.  –ù–∞–π–¥–∏—Ç–µ —Ä–∞–∑–¥–µ–ª **Settings ‚Üí Environment Variables**.\n` +
                      `3.  –°–æ–∑–¥–∞–π—Ç–µ **–Ω–æ–≤—É—é** –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –∏–º–µ–Ω–µ–º (Key) **\`API_KEY\`**.\n` +
                      `4.  –í –ø–æ–ª–µ –∑–Ω–∞—á–µ–Ω–∏—è (Value) –≤—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –∫–ª—é—á API –æ—Ç **Google Gemini**.\n` +
                      `5.  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≤—Å–µ—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π (Production, Preview, Development).\n` +
                      `6.  –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏ **–ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ (Redeploy)**.\n\n` +
                      `*–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–∫–∞ –≤—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–∏ —à–∞–≥–∏.*`;
                return;
            }

            yield `### –û—à–∏–±–∫–∞ API\n\n–ü—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É –æ—Ç Google Gemini.\n**–°—Ç–∞—Ç—É—Å:** ${response.status}\n**–û—Ç–≤–µ—Ç:** \`${detailedError}\``;
            return;
        }

        if (!response.body) {
            yield "### –û—à–∏–±–∫–∞\n\n–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Ç–æ–∫–æ–≤–æ–π –ø–µ—Ä–µ–¥–∞—á–∏.";
            return;
        }

        const reader = response.body.getReader();
        const decoder = new TextDecoder();

        while (true) {
            const { value, done } = await reader.read();
            if (done) break;
            yield decoder.decode(value, { stream: true });
        }
        
        const finalChunk = decoder.decode();
        if (finalChunk) {
           yield finalChunk;
        }

    } catch (error) {
        console.error("Gemini fetch stream error:", error);
        let errorMessage = `### üö® –û—à–∏–±–∫–∞ —Å–µ—Ç–∏\n\n–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (\`${proxyUrl}\`).\n\n` +
                           `–≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –æ–±—ã—á–Ω–æ –≤—ã–∑–≤–∞–Ω–∞ –æ–¥–Ω–æ–π –∏–∑ –¥–≤—É—Ö –ø—Ä–∏—á–∏–Ω:\n\n` +
                           `**1. –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —Å–∏–ª—É.**\n` +
                           `–ï—Å–ª–∏ –≤—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∏ –∏–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, \`API_KEY\`) –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Vercel, –≤–∞–º **–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ (Redeploy)**.\n` +
                           `*–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≤–∞—à –ø—Ä–æ–µ–∫—Ç –Ω–∞ Vercel ‚Üí Deployments ‚Üí –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ "Redeploy".*\n\n` +
                           `**2. –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–ª—é—á–æ–º API –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ Google.**\n` +
                           `–î–∞–∂–µ –µ—Å–ª–∏ –∫–ª—é—á —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤–µ—Ä–Ω–æ, –æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ [Google AI Studio](https://aistudio.google.com/app/apikey) –∏–ª–∏ [Google Cloud Console](https://console.cloud.google.com/): \n` +
                           `*   –ß—Ç–æ –∫–ª—é—á API **–∞–∫—Ç–∏–≤–µ–Ω (enabled)**.\n` +
                           `*   –ß—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ **–≤–∫–ª—é—á–µ–Ω –±–∏–ª–ª–∏–Ω–≥ (billing)**, –µ—Å–ª–∏ —ç—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è.\n\n` +
                           `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —ç—Ç–∏ –¥–≤–∞ –ø—É–Ω–∫—Ç–∞. –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –∏—Å—á–µ–∑–Ω—É—Ç—å.`;

        if (error instanceof Error && !error.message.toLowerCase().includes('failed to fetch')) {
             errorMessage = `### –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞\n\n–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: ${error.message}`;
        }
        yield errorMessage;
    }
};