// utils/addressMappings.ts

import { regionCenters } from './regionCenters';

// A dictionary to normalize different forms of region names.
// This is a crucial part for standardizing data.
const REGION_SYNONYMS: { [key: string]: string } = {
    // Republics
    'адыгея': 'Республика Адыгея',
    'алтай': 'Республика Алтай',
    'башкортостан': 'Республика Башкортостан',
    'башкирия': 'Республика Башкортостан',
    'бурятия': 'Республика Бурятия',
    'дагестан': 'Республика Дагестан',
    'днр': 'Донецкая Народная Республика',
    'донецкая': 'Донецкая Народная Республика',
    'ингушетия': 'Республика Ингушетия',
    'кбр': 'Кабардино-Балкарская Республика',
    'кабардино-балкария': 'Кабардино-Балкарская Республика',
    'калмыкия': 'Республика Калмыкия',
    'кчр': 'Карачаево-Черкесская Республика',
    'карачаево-черкесия': 'Карачаево-Черкесская Республика',
    'карелия': 'Республика Карелия',
    'коми': 'Республика Коми',
    'крым': 'Республика Крым',
    'лнр': 'Луганская Народная Республика',
    'луганская': 'Луганская Народная Республика',
    'марий эл': 'Республика Марий Эл',
    'мордовия': 'Республика Мордовия',
    'саха': 'Республика Саха (Якутия)',
    'якутия': 'Республика Саха (Якутия)',
    'северная осетия': 'Республика Северная Осетия — Алания',
    'алания': 'Республика Северная Осетия — Алания',
    'татарстан': 'Республика Татарстан',
    'тыва': 'Республика Тыва',
    'тува': 'Республика Тыва',
    'удмуртия': 'Удмуртская Республика',
    'хакасия': 'Республика Хакасия',
    'чр': 'Чеченская Республика',
    'чечня': 'Чеченская Республика',
    'чувашия': 'Чувашская Республика',
    // Krais
    'алтайский': 'Алтайский край',
    'забайкальский': 'Забайкальский край',
    'камчатский': 'Камчатский край',
    'краснодарский': 'Краснодарский край',
    'красноярский': 'Красноярский край',
    'пермский': 'Пермский край',
    'приморский': 'Приморский край',
    'ставропольский': 'Ставропольский край',
    'хабаровский': 'Хабаровский край',
    // Oblasts
    'амурская': 'Амурская область',
    'архангельская': 'Архангельская область',
    'астраханская': 'Астраханская область',
    'белгородская': 'Белгородская область',
    'брянская': 'Брянская область',
    'владимирская': 'Владимирская область',
    'волгоградская': 'Волгоградская область',
    'вологодская': 'Вологодская область',
    'воронежская': 'Воронежская область',
    'запорожская': 'Запорожская область',
    'ивановская': 'Ивановская область',
    'иркутская': 'Иркутская область',
    'калининградская': 'Калининградская область',
    'калужская': 'Калужская область',
    'кемеровская': 'Кемеровская область — Кузбасс',
    'кузбасс': 'Кемеровская область — Кузбасс',
    'кировская': 'Кировская область',
    'костромская': 'Костромская область',
    'курганская': 'Курганская область',
    'курская': 'Курская область',
    'ленинградская': 'Ленинградская область',
    'липецкая': 'Липецкая область',
    'магаданская': 'Магаданская область',
    'московская': 'Московская область',
    'мурманская': 'Мурманская область',
    'нижегородская': 'Нижегородская область',
    'новгородская': 'Новгородская область',
    'новосибирская': 'Новосибирская область',
    'омская': 'Омская область',
    'оренбургская': 'Оренбургская область',
    'орловская': 'Орловская область',
    'пензенская': 'Пензенская область',
    'псковская': 'Псковская область',
    'ростовская': 'Ростовская область',
    'рязанская': 'Рязанская область',
    'самарская': 'Самарская область',
    'саратовская': 'Саратовская область',
    'сахалинская': 'Сахалинская область',
    'свердловская': 'Свердловская область',
    'смоленская': 'Смоленская область',
    'тамбовская': 'Тамбовская область',
    'тверская': 'Тверская область',
    'томская': 'Томская область',
    'тульская': 'Тульская область',
    'тюменская': 'Тюменская область',
    'ульяновская': 'Ульяновская область',
    'харьковская': 'Харьковская область',
    'херсонская': 'Херсонская область',
    'челябинская': 'Челябинская область',
    'ярославская': 'Ярославская область',
    // Federal cities
    'москва': 'Москва',
    'санкт-петербург': 'Санкт-Петербург',
    'спб': 'Санкт-Петербург',
    'севастополь': 'Севастополь',
    // Autonomous Oblast
    'еврейская': 'Еврейская автономная область',
    // Autonomous Okrugs
    'ненецкий': 'Ненецкий автономный округ',
    'хмао': 'Ханты-Мансийский автономный округ — Югра',
    'югра': 'Ханты-Мансийский автономный округ — Югра',
    'чукотский': 'Чукотский автономный округ',
    'янао': 'Ямало-Ненецкий автономный округ',
};

// Simplified mapping of the first 3 digits of a postal code to a region.
const POSTAL_CODE_MAP: { [prefix: string]: string } = {
    // Moscow and Oblast
    '101': 'Москва', '102': 'Москва', '103': 'Москва', '104': 'Москва', '105': 'Москва', '106': 'Москва', '107': 'Москва', '108': 'Москва', '109': 'Москва', '111': 'Москва', '112': 'Москва', '113': 'Москва', '114': 'Москва', '115': 'Москва', '116': 'Москва', '117': 'Москва', '118': 'Москва', '119': 'Москва', '121': 'Москва', '123': 'Москва', '124': 'Москва', '125': 'Москва', '126': 'Москва', '127': 'Москва', '128': 'Москва', '129': 'Москва', '130': 'Москва', '135': 'Москва',
    '140': 'Московская область', '141': 'Московская область', '142': 'Московская область', '143': 'Московская область', '144': 'Московская область',
    // St. Petersburg and Oblast
    '187': 'Ленинградская область', '188': 'Ленинградская область',
    '190': 'Санкт-Петербург', '191': 'Санкт-Петербург', '192': 'Санкт-Петербург', '193': 'Санкт-Петербург', '194': 'Санкт-Петербург', '195': 'Санкт-Петербург', '196': 'Санкт-Петербург', '197': 'Санкт-Петербург', '198': 'Санкт-Петербург', '199': 'Санкт-Петербург',
    // Kaliningrad
    '236': 'Калининградская область',
    '238': 'Калининградская область',
    // Other regions
    '241': 'Брянская область', '242': 'Брянская область', '243': 'Брянская область',
    '248': 'Калужская область',
    '249': 'Калужская область',
    '300': 'Тульская область',
    '301': 'Тульская область',
    '302': 'Орловская область', '303': 'Орловская область',
    '305': 'Курская область',
    '308': 'Белгородская область',
    '344': 'Ростовская область',
    '350': 'Краснодарский край',
    '354': 'Краснодарский край',
    '358': 'Республика Калмыкия',
    '360': 'Кабардино-Балкарская Республика',
    '364': 'Чеченская Республика',
    '367': 'Республика Дагестан',
    '385': 'Республика Адыгея',
    '390': 'Рязанская область',
    '394': 'Воронежская область',
    '400': 'Волгоградская область',
    '410': 'Саратовская область',
    '414': 'Астраханская область',
    '420': 'Республика Татарстан',
    '424': 'Республика Марий Эл',
    '426': 'Удмуртская Республика',
    '430': 'Республика Мордовия',
    '432': 'Ульяновская область',
    '440': 'Пензенская область',
    '443': 'Самарская область',
    '450': 'Республика Башкортостан',
    '454': 'Челябинская область',
    '460': 'Оренбургская область',
    '603': 'Нижегородская область',
    '610': 'Кировская область',
    '614': 'Пермский край',
    '620': 'Свердловская область',
    '625': 'Тюменская область',
    '628': 'Ханты-Мансийский автономный округ — Югра',
    '629': 'Ямало-Ненецкий автономный округ',
    '630': 'Новосибирская область',
    '644': 'Омская область',
    '650': 'Кемеровская область — Кузбасс',
    '656': 'Алтайский край',
    '660': 'Красноярский край',
    '664': 'Иркутская область',
    '670': 'Республика Бурятия',
    '672': 'Забайкальский край',
    '677': 'Республика Саха (Якутия)',
    '680': 'Хабаровский край',
    '690': 'Приморский край',
    '693': 'Сахалинская область',
};

export const normalizeRegion = (regionStr: string): string => {
    if (!regionStr) return 'Регион не определён';

    const lowercased = regionStr.toLowerCase().replace(/ё/g, 'е').trim();
    
    if (REGION_SYNONYMS[lowercased]) {
        return REGION_SYNONYMS[lowercased];
    }
    
    const words = lowercased.split(/\s+/);
    for (let i = 0; i < words.length; i++) {
        const word = words[i].replace(/[.,]/g, '');
        if (REGION_SYNONYMS[word]) {
            return REGION_SYNONYMS[word];
        }
    }

    return regionStr.charAt(0).toUpperCase() + regionStr.slice(1);
};


export const getRegionByExplicit = (address: string): string | null => {
    const lowerAddress = address.toLowerCase().replace(/ё/g, 'е');
    const sortedKeys = Object.keys(REGION_SYNONYMS).sort((a, b) => b.length - a.length);

    for (const key of sortedKeys) {
        // This regex ensures we match whole words to avoid partial matches (e.g., 'томск' in 'автомсклад').
        const pattern = new RegExp(`(^|[^а-яё0-9])${key}([^а-яё0-9]|$)`, 'i');
        if (pattern.test(lowerAddress)) {
            return REGION_SYNONYMS[key];
        }
    }

    return null;
};


export const getRegionByPostal = (postalCode: string): string | null => {
    if (!postalCode || postalCode.length < 3) return null;
    const prefix = postalCode.substring(0, 3);
    return POSTAL_CODE_MAP[prefix] || null;
};

const expandedCityToRegion: Record<string, string> = {
    ...regionCenters,
    // Kaliningrad Oblast Cities from user list
    'гвардейск': 'Калининградская область', 'светлый': 'Калининградская область',
    'зеленоградск': 'Калининградская область', 'советск': 'Калининградская область',
    'пионерский': 'Калининградская область', 'гурьевск': 'Калининградская область',
    'балтийск': 'Калининградская область', 'полесск': 'Калининградская область',
    'черняховск': 'Калининградская область', 'багратионовск': 'Калининградская область',
    'неман': 'Калининградская область', 'озерск': 'Калининградская область',
    'правдинск': 'Калининградская область', 'гусев': 'Калининградская область',
    'светлогорск': 'Калининградская область', 'славск': 'Калининградская область',
    'янтарный': 'Калининградская область', 'большое исаково': 'Калининградская область',
    'васильково': 'Калининградская область', 'голубево': 'Калининградская область',
    'чкаловск': 'Калининградская область',
    // Leningrad Oblast
    'кингисепп': 'Ленинградская область', 'гатчина': 'Ленинградская область',
    'кировск': 'Ленинградская область', 'кириши': 'Ленинградская область',
    'сосновый бор': 'Ленинградская область', 'сланцы': 'Ленинградская область',
    'колпино': 'Санкт-Петербург', 'пушкин': 'Санкт-Петербург',
    'петергоф': 'Санкт-Петербург', 'всеволожск': 'Ленинградская область',
    'кудрово': 'Ленинградская область', 'мурино': 'Ленинградская область',
    'сертолово': 'Ленинградская область', 'тихвин': 'Ленинградская область',
    'луга': 'Ленинградская область', 'тосно': 'Ленинградская область',
    'волосово': 'Ленинградская область', 'ивангород': 'Ленинградская область',
    'приозерск': 'Ленинградская область', 'светогорск': 'Ленинградская область',
    // Bryansk
    'новозыбков': 'Брянская область', 'клинцы': 'Брянская область',
    // Oryol
    'ливны': 'Орловская область',
    // Donetsk, Luhansk, etc.
    'енакиево': 'Донецкая Народная Республика', 'горловка': 'Донецкая Народная Республика',
    'макеевка': 'Донецкая Народная Республика', 'мариуполь': 'Донецкая Народная Республика',
    'торез': 'Донецкая Народная Республика', 'харцызск': 'Донецкая Народная Республика',
    'донецк': 'Донецкая Народная Республика', 'иловайск': 'Донецкая Народная Республика',
    'снежное': 'Донецкая Народная Республика', 'докучаевск': 'Донецкая Народная Республика',
    'волноваха': 'Донецкая Народная Республика', 'ясиноватая': 'Донецкая Народная Республика',
    'шахтерск': 'Донецкая Народная Республика', 'кировское': 'Донецкая Народная Республика',
    'амвросиевка': 'Донецкая Народная Республика', 'ждановка': 'Донецкая Народная Республика',
    'зугрэс': 'Донецкая Народная Республика', 'углегорск': 'Донецкая Народная Республика',
    'комсомольское': 'Донецкая Народная Республика',
    'луганск': 'Луганская Народная Республика', 'красный луч': 'Луганская Народная Республика',
    'брянка': 'Луганская Народная Республика', 'лисичанск': 'Луганская Народная Республика',
    'рубежное': 'Луганская Народная Республика', 'северодонецк': 'Луганская Народная Республика',
    'стаханов': 'Луганская Народная Республика', 'алчевск': 'Луганская Народная Республика',
    'антрацит': 'Луганская Народная Республика', 'ровеньки': 'Луганская Народная Республика',
    'свердловск': 'Луганская Народная Республика', 'старобельск': 'Луганская Народная Республика',
    'первомайск': 'Луганская Народная Республика', 'перевальск': 'Луганская Народная Республика',
    'лутугино': 'Луганская Народная Республика', 'краснодон': 'Луганская Народная Республика',
    'молодогвардейск': 'Луганская Народная Республика', 'суходольск': 'Луганская Народная Республика',
    'сватово': 'Луганская Народная Республика', 'счастье': 'Луганская Народная Республика',
    'ирмино': 'Луганская Народная Республика', 'зоринск': 'Луганская Народная Республика',
    'червонопартизанск': 'Луганская Народная Республика', 'дебальцево': 'Донецкая Народная Республика',
    'светлодарск': 'Донецкая Народная Республика', 'юнокоммунаровск': 'Донецкая Народная Республика',
    
    // Zaporozhye
    'геническ': 'Херсонская область', 'бердянск': 'Запорожская область',
    'мелитополь': 'Запорожская область', 'энергодар': 'Запорожская область',
    'приморск': 'Запорожская область', 'токмак': 'Запорожская область',
    'днепрорудное': 'Запорожская область', 'пологи': 'Запорожская область',
    'молочанск': 'Запорожская область', 'васильевка': 'Запорожская область',
    
    // Kherson
    'каховка': 'Херсонская область',
    
    // Others
    'губкин': 'Белгородская область',
};

/**
 * Finds a known city within the address string and returns its corresponding region.
 * @param address The full address string.
 * @returns An object with the found region and city, or null if no match.
 */
export function getRegionByCityInText(address: string): { region: string; city: string } | null {
    const lowerAddress = ` ${address.toLowerCase().replace(/ё/g, 'е').replace(/[.,]/g, ' ')} `;
    // Sort keys by length descending to match longer names first (e.g., "красный луч" before "луч")
    const sortedCities = Object.keys(expandedCityToRegion).sort((a, b) => b.length - a.length);

    for (const cityKey of sortedCities) {
        // Search for the city as a whole word, surrounded by non-letter characters
        const pattern = new RegExp(`[^а-яё0-9]${cityKey}[^а-яё0-9]`, 'i');
        if (pattern.test(lowerAddress)) {
            return { region: expandedCityToRegion[cityKey], city: cityKey };
        }
    }
    return null;
}

// Deprecated function, kept for potential compatibility but should not be used by the main parser.
export const getRegionByCity = (city: string): string | null => {
    if (!city) return null;
    const lowerCity = city.toLowerCase().trim().replace(/ё/g, 'е');
    return expandedCityToRegion[lowerCity] || null;
};
